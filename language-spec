
module ::= (module module-exp ...)

module-exp ::= (define-type id type)
             | (define-function (id:<fun-name>
	       			(id:<arg-name> : type:<arg-type>) ... :
				type:<ret-type>)
	            statement)

statement ::= (define-variable (id:<var-name> : id:<var-type>) statement)
         | (assign lhs-exp exp)
	 | (if exp statement statement)
	 | (while exp statement)
	 | (return exp)
	 | (block statement ...)
	 | exp

lhs-exp ::= id |  (* id offset : type)

exp ::= id
      | (#%app id id ...)
      | (#value value type)
      | lhs-exp

value ::= 123 | 123.9834
id ::= symbol

type ::= prims | (struct (id : type) ...) | (pointer type) | (type ... -> type)
